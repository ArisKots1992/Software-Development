package aris.kots.adminclientapplication;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.content.Context;
import android.content.res.AssetManager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

public class MyCustomListViewAdapter extends BaseAdapter {
	static class ViewHolder {
		public TextView text;
		public ImageView image;
	}

	LayoutInflater inflater;
	List<String> items;
	double size;
	int ScreenHeight;
	int ScreenWidth;
	AssetManager am;
	boolean ShowDrawings;
	public MyCustomListViewAdapter(Activity context, List<String> items, AssetManager asset,
			int ColorPostition) {
		super();
		am = asset;
		this.items = items;
		this.inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
	}

	@Override
	public int getCount() {
		// TODO Auto-generated method stub
		return items.size();
	}

	@Override
	public Object getItem(int position) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return 0;
	}
	

	@Override
	public View getView(final int position, View convertView, final ViewGroup parent) {
		// TODO Auto-generated method stub

		String item = items.get(position);

		View vi = convertView;

		if (convertView == null) {
			vi = inflater.inflate(R.layout.item_row_test, null);
			ViewHolder viewHolder = new ViewHolder();
			viewHolder.textT = (TextView) vi.findViewById(R.id.txtTitle);
			viewHolder.textS = (TextView) vi.findViewById(R.id.txtSubTitle);
			viewHolder.image2 = (ImageView) vi
					.findViewById(R.id.imgThumbnail_draw);
			viewHolder.image = (ImageView) vi.findViewById(R.id.imgThumbnail);
			vi.setTag(viewHolder);
		}else{
//	        DecodeTask task = (DecodeTask) vi.getTag().image.getTag();
//	        if(task != null) {
//	            task.cancel(true);
//	        }
		}
		///test
		
		////
		
		final ViewHolder holder = (ViewHolder) vi.getTag();
		RelativeLayout.LayoutParams lp2 = new RelativeLayout.LayoutParams(
				LayoutParams.MATCH_PARENT, (int) (ScreenHeight / size));
	////	lp2.addRule(RelativeLayout.CENTER_IN_PARENT, RelativeLayout.TRUE);

		holder.image.setLayoutParams(lp2);
		holder.image.setAdjustViewBounds(true);
		//holder.image.setBackgroundColor(Color.BLACK);

		//holder.image.setImageBitmap(null);
		//Text Size
		int myheight =  (int) (ScreenHeight / size);
		
		
		if (size == 2.3){
			LayoutParams paramsT = holder.textT.getLayoutParams();
			paramsT.height = (int) (myheight * 0.60);
			holder.textT.setLayoutParams(paramsT);
			LayoutParams paramsS = holder.textS.getLayoutParams();
			paramsS.height = (int) (myheight * 0.3);
			holder.textS.setLayoutParams(paramsS);	
			
			final Uri uri = Uri.fromFile(new File(item.ThumbnailResource_big));
			Picasso.with(parent.getContext()).load(uri).noFade().into(holder.image);
			
			
			//////EDWW PROSOXH!!!! NA KANW KAI RESIZE
			if (ShowDrawings == true){
				holder.image2.setAdjustViewBounds(true);
				final Uri uri2 = Uri.fromFile(new File(item.Draw));
				Picasso.with(parent.getContext()).load(uri2).fit().noFade().into(holder.image2);		
			}			
			/*
			
		}
		else {
			LayoutParams paramsT = holder.textT.getLayoutParams();
			paramsT.height = (int) (myheight * 0.8);
			holder.textT.setLayoutParams(paramsT);
			LayoutParams paramsS = holder.textS.getLayoutParams();
			paramsS.height = (int) (myheight * 0);
			holder.textS.setLayoutParams(paramsS);	
			
			Uri uri = Uri.fromFile(new File(item.ThumbnailResource_small));
			Picasso.with(parent.getContext()).load(uri).fit().noFade().into(holder.image);
			
			if (ShowDrawings == true){			
				holder.image2.setAdjustViewBounds(true);
				final Uri uri2 = Uri.fromFile(new File(item.Draw));
				Picasso.with(parent.getContext()).load(uri2).fit().noFade().into(holder.image2);	
			}
			//holder.image.setImageBitmap(BitmapFactory.decodeFile(item.ThumbnailResource_small));
		}
		holder.textS.setText(item.SubTitle);
		holder.textT.setText(item.Title);
		Typeface tfa = Typeface.createFromAsset(am, "fonts/COMICBD.TTF");
		holder.textT.setTypeface(tfa);
		holder.textS.setTypeface(tfa);

		//resetViews(participantView);

		return vi;
	}

}